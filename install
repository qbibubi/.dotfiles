#! /usr/bin/sh

# This script should be run after finishing Arch Linux installation for the best compatibility.
# Other use cases were not taken into consideration. Use at your own risk.


RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' #no color 

git_repo_url="https://github.com/qbibubi/.dotfiles.git"
yay_repo_url="https://aur.archlinux.org/yay-git.git"

packages="git tmux zsh kitty discord firefox-developer-edition i3-wm ly neofetch 
          polybar rofi zsh-autosuggestions"


# Installs packages listed in $packages
install_packages()
{
  echo -e "Installing ${RED}packages...${NC}"
  sudo pacman -S -q --noconfirm "$packages"
  result=$?
  
  if [ $result -gt 0 ]; then
    echo -e "Packages installed ${RED}unsuccesfully.${NC}"
  else
    echo -e "Packages installed ${GREEN}succesfully.${NC}"
  fi
}


# Installs yay package manager
install_yay()
{
  echo -e "Installing ${RED}yay${NC}..."

  cd /opt && git clone $yay_repo_url ./yay-git 
  sudo chown -R qbi:qbi ./yay-git
  cd yay-git && makepkg -si

  echo -e "${GREEN}yay${NC} installed succesfully."
}

# 
intall_oh_my_zsh()
{
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
}


# Changes shell to zsh
change_shell()
{
  echo -e "Changing shell to ${RED}zsh${NC}"

  if [ $(command -v zsh) ]; then
    chsh -s /usr/bin/zsh
  fi
}


# Helper function as alias for clone_bare_repository
bare_config()
{
  /usr/bin/git --git-dir="$HOME"/.dotfiles/ --work-tree="$HOME" $@ 
}


# Clones a bare repository from $git_repo_url to $HOME/.dotfiles directory.
# Adds ".dotfiles" to $HOME/.gitignore. Makes a config-backup for pre-existing
# configuration files
clone_bare_repository()
{
  echo -e "Creating ${RED}.dotfiles${NC} bare repository in ${RED}$HOME/.dotfiles${NC}..."
  git clone --bare $git_repo_url "$HOME"/.dotfiles

  echo "alias config='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'" >> $HOME/.zshrc
  echo ".dotfiles" >> "$HOME"/.gitignore 

  mkdir -p .config-backup
  bare_config checkout
  if [ $? = 0 ]; then
    echo "Checked out config.";
    else
      echo "Backing up pre-existing .dotfiles.";
      bare_config checkout 2>&1 | grep -E "\s+\." | awk {'print $1'} | xargs -I{} mv {} .config-backup/{}
  fi;

  bare_config checkout
  bare_config config status.showUntrackedFiles no 
}

install_packages 
clone_bare_repository
change_shell
